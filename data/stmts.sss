Vec3 :: struktur {
    x, y, z : s32;
}

T :: struktur {
    mit a : Vec3;
}

z := new Vec3;
a : s32 = 5 + 3;
b := a + 1;
c := falsch;
d : s32 = 0;

zweig als(u32)a {
    1..7 => a += 1;
       8 => a += 2;
}

solange a < b {
    a += 1;
}

##(
bis a >= b {
    a += 1;
}
##)

wenn a == b {
    b = 10;
} sonst falls a > b {
    b = 5;
} sonst {
    b = 0;
}

asdf :: proc(mit bla: Vec3) {
    temp_x := x;
}

alfa :: proc() -> u32 {
    erg 1;
}

omega :: proc() -> u32 {
    erg 10;
}

iter alfa()..omega() {
    b = b + it;
}

iter 1..2 {
    b = b + it;
} sonst {
    b = 100;
}

master :: proc(args: [] string) -> string {
    ergebnis := args[0];

    erg ergebnis, 7.5;
}

args : [] string = { "a", "b", "c" };
e := master(args);
f := d;

g := sizeof(Vec3);
h : Vec3 = { 10, 11, 12 };
h.z = 15;
j := "abcdefg";
k := j[0];
l := 'a';
m := "ᚻᚨᛚᛚᛟ".anzahl;

